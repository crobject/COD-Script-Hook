void ScrCmd_attach()
void ScrCmd_attachShieldModel()
void ScrCmd_detach()
void ScrCmd_detachShieldModel()
void ScrCmd_moveShieldModel(char* p0, char* p1, char* p2)
void ScrCmd_detachAll()
int ScrCmd_GetAttachSize()
conststring ScrCmd_GetAttachModelName(int p0)
conststring ScrCmd_GetAttachTagName(int p0)
void ScrCmd_GetAttachIgnoreCollision(int p0)
void ScrCmd_hidepart(char* p0, char* p1)
void ScrCmd_hidepartAllInstances(char* p0, char* p1)
void ScrCmd_hideallparts()
void ScrCmd_showpart(char* p0, char* p1)
void ScrCmd_showallparts()
void ScrCmd_LinkTo(Entity p0, char* p1, float* p2, float* p3)
void ScrCmd_LinkToBlendToTag()
void ScrCmd_Unlink()
void ScrCmd_IsLinked()
void ScrCmd_GetLinkedParent()
void ScrCmd_GetLinkedChildren(int p0)
void ScrCmd_GetMovingPlatformParent()
void ScrCmd_AutoboltMissileEffects(int p0)
void ScrCmd_EnableLinkTo()
void ScrCmd_PlayerLinkTo(Entity p0, Entity p1, char* p1, int p7, int p7, int p7, float p2, float p3, float p4, float p5, float p6)
void ScrCmd_PlayerLinkToDelta()
void ScrCmd_PlayerLinkWeaponViewToDelta()
void ScrCmd_PlayerLinkToAbsolute(Entity p0, Entity p1, char* p1)
void ScrCmd_PlayerLinkToBlend(Entity p1, char* p1, float p2, float p3, float p4)
void ScrCmd_PlayerLinkedOffsetEnable()
void ScrCmd_PlayerLinkedOffsetDisable()
void ScrCmd_PlayerLinkedSetViewZnear(int p0)
void ScrCmd_PlayerLinkedSetUseBaseAngleForViewClamp(int p0)
void ScrCmd_LerpViewAngleClamp(float p0, float p1, float p2, float p3, float p4, float p5, float p6)
void everyVisitCallback()
void ScrCmd_GetEye()
void ScrCmd_GetViewOrigin()
int ScrCmd_IsTouching()
void ScrCmd_GetIsTouchingEntities(Object p0)
void ScrCmd_StopLoopSound()
void ScrCmd_StopSounds()
void ScrCmd_PlayRumbleOnEntity(char* p0)
void ScrCmd_PlayRumbleLoopOnEntity()
void ScrCmd_StopRumble(char* p0)
void ScrCmd_Delete()
void ScrCmd_SetModel(char* p0)
void ScrCmd_LaserOn()
void ScrCmd_LaserOff()
void ScrCmd_LaserAltViewOn()
void ScrCmd_LaserAltViewOff()
void ScrCmd_ThermalVisionOn(int p0)
void ScrCmd_ThermalVisionOnShadowOff()
void ScrCmd_ThermalVisionOff()
void ScrCmd_ThermalDrawEnable()
void ScrCmd_ThermalDrawDisable()
void ScrCmd_ThermalVisionFOFOverlayOn()
void ScrCmd_ThermalVisionFOFOverlayOff()
void ScrCmd_AutoSpotOverlayOn()
void ScrCmd_AutoSpotOverlayOff()
void ScrCmd_SetEyesOnUplinkEnabled(int p0)
void ScrCmd_SetContents(int p0)
void ScrCmd_MakeUsable()
void ScrCmd_MakeUnusable()
void GScr_SetCursorHint(char* p0)
void GScr_SetHintString(Entity p0, char* p0)
void ScrCmd_ForceUseHintOn(char* p0)
void ScrCmd_ForceUseHintOff()
void ScrCmd_MakeSoft()
void ScrCmd_MakeHard()
void ScrCmd_EntityWillNeverChange()
void GScr_StartFiring()
void GScr_StopFiring()
void GScr_IsFiringTurret()
void GScr_StartBarrelSpin()
void GScr_StopBarrelSpin()
float GScr_GetBarrelSpinRate()
void GScr_RemoteControlTurret()
void GScr_RemoteControlTurretOff()
void GScr_ShootTurret()
void GScr_GetTurretOwner()
void GScr_SetSentryOwner(Entity p0)
void GScr_SetSentryCarrier(Entity p0)
void GScr_SetTurretMinimapVisible(char* p1, int p0)
void GScr_SetTargetEntity(float* p1)
void GScr_SnapToTargetEntity(float* p1)
void GScr_ClearTargetEntity()
void GScr_GetTurretTarget(int p0)
void GScr_SetPlayerSpread(float p0)
void PlayerCmd_EnableMouseSteer()
void j_Scr_ErrorInternal_0()
void GScr_SetConvergenceTime(char* p1, float p0)
void GScr_SetConvergenceHeightPercent(float p0)
void GScr_SetTurretTeam()
void GScr_MakeTurretSolid()
void GScr_MakeTurretOperable()
void GScr_MakeTurretInoperable()
void nullsub_105()
void GScr_SetRightArc(float p0)
void GScr_SetLeftArc(float p0)
void GScr_SetTopArc(float p0)
void GScr_SetBottomArc(float p0)
void GScr_SetAutoRotationDelay(float p0)
void GScr_SetDefaultDropPitch(float p0)
void GScr_RestoreDefaultDropPitch()
void GScr_TurretFireDisable()
void GScr_TurretFireEnable()
void GScr_TurretSetBarrelSpinEnabled(int p0)
void GScr_SetTurretModeChangeWait(int p0)
void ScrCmd_GetHighestNodeStance()
void ScrCmd_DoesNodeAllowStance()
void GScr_UseTriggerRequireLookAt()
conststring ScrCmd_GetStance()
void ScrCmd_SetStance()
void ScrCmd_ItemWeaponSetAmmo(int p0, int p1, int p2, int p3)
int GScr_GetAmmoCount(char* p0)
vector GScr_GetTagOrigin(char* p0)
void GScr_GetTagAngles(char* p0)
void GScr_ShellShock(char* p0, float p1, int p2)
void GScr_StunPlayer(float p0)
void j_Scr_ErrorInternal_1()
void j_Scr_ErrorInternal_2()
void GScr_StopShellShock()
void GScr_FadeOutShellShock()
void GScr_SetDepthOfField(float p0, float p1, float p2, float p3, float p4, float p5)
void GScr_SetViewModelDepthOfField(float p0, float p1)
void j_Scr_ErrorInternal_3()
void j_Scr_ErrorInternal_4()
void j_Scr_ErrorInternal_5()
void GScr_ViewKick(int p0, float* p1)
void GScr_LocalToWorldCoords(float* p0)
int GScr_GetEntityNumber()
void GScr_GetEntityVelocity()
void GScr_EnableGrenadeTouchDamage()
void GScr_DisableGrenadeTouchDamage()
void GScr_EnableAimAssist()
void GScr_DisableAimAssist()
void GScr_EntityRadiusDamage()
void ScrCmd_DoDamage(float p0, float* p1)
void GScr_Detonate(Entity p0)
void GScr_DamageConeTrace(float* p0)
void GScr_SightConeTrace()
void GScr_MissileSetTargetEnt(float* p1)
void GScr_MissileSetTargetPos(float* p0)
void GScr_MissileClearTarget()
void GScr_MissileSetFlightmodeDirect()
void GScr_MissileSetFlightmodeTop()
float GScr_GetLightIntensity()
void GScr_SetLightIntensity(float p0)
int GScr_IsRagdoll()
void ScrCmd_SetMoveSpeedScale(float p0, float p0)
void ScrCmd_SetGrenadeThrowScale(float p0, float p1)
void ScrCmd_SetGrenadeCookScale(float p0)
void GScr_CameraLinkTo(char* p1)
void GScr_CameraUnlink()
void GScr_ControlsLinkTo()
void GScr_ControlsUnlink()
void GScr_RideVehicle(float p1, float p2, float p3, float p4, int p5)
void GScr_StopRidingVehicle()
void GScr_DisableMissileBoosting()
void GScr_EnableMissileBoosting()
void GScr_SetMissileMinimapVisible(int p0)
void GScr_MakeVehicleSolidCapsule(float p0, float p1, float p2)
void GScr_MakeVehicleSolidSphere(float p0, float p1)
void GScr_RemoteControlVehicle()
void GScr_RemoteControlVehicleOff()
void GScr_IsFiringVehicleTurret()
void GScr_RemoteControlVehicleTarget()
void GScr_RemoteControlVehicleTargetOff()
void GScr_MakeVehicleNotCollideWithPlayers(int p0)
void GScr_DriveVehicleAndControlTurret()
void GScr_DriveVehicleAndControlTurretOff()
void everyVisitCallback_0()
void GScr_GetPlayerSetting(char* p0)
void sub_8240FE50(char* p0)
void sub_8240FFB0(char* p0, int p1, int p1, int p1, int p1, float p1, char* p1)
void GScr_RemoteCameraSoundscapeOn()
void GScr_RemoteCameraSoundscapeOff()
void j_Scr_ErrorInternal_6()
void j_Scr_ErrorInternal_7()
void ScrCmd_WorldPointToScreenPos(float* p0, float p1)
void ScrCmd_WorldPointInReticle_Circle(float* p0, float p1, float p2)
void ScrCmd_WorldPointInReticle_Rect(float* p0, float p1, float p2, float p3)
void ScrCmd_GetPointInBounds(float p0, float p1, float p2)
void ScrCmd_TransferMarksToNewScriptModel()
void GScrCmd_SetWaterSheeting(int p0, float p1)
void GScrCmd_SetWeaponHudIconOverride()
conststring GScrCmd_GetWeaponHudIconOverride()
void GScr_SetEMPJammed(int p0)
void Scr_PlayerSetExponentialFog()
int GScr_IsItemUnlocked(char* p0)
void GScr_GetPlayerData()
void GScr_SetPlayerData()
void GScr_GetRankedPlayerData()
void GScr_SetRankedPlayerData()
void GScr_GetPrivatePlayerData()
void GScr_SetPrivatePlayerData()
void GScr_GetCoopPlayerData()
void GScr_SetCoopPlayerData()
void GScr_GetCommonPlayerData()
void GScr_SetCommonPlayerData()
void GScr_GetCaCPlayerData(int p1)
void ScrCmd_TrackerUpdate(int p1, char* p0)
void GScr_DisconnectPaths()
void GScr_ConnectPaths()
void GScr_DisconnectNode()
void GScr_ConnectNode()
void GScr_SetAISightLineVisible(int p0)
void ScrCmd_SetClothType(char* p0)
void ScrCmd_SetSurfaceType(char* p0)
void Scr_AIPhysicsTrace(float* p0, float* p1, Entity p2, Entity p2, Entity p3, Entity p3, float p2, float p3, int p4, int p5)
void Scr_AIPhysicsTracePassed(float* p0, float* p1, float p2, float p3, int p4)
void ScrCmd_DontInterpolate()
void ScrCmd_SetScriptablePartState(int p2)
void ScrCmd_SetScriptableDamageOwner()
void GScr_StopSliding()
void ScrCmd_HudOutlineEnableForClient(int p1, int p2)
void ScrCmd_HudOutlineDisableForClient()
void ScrCmd_HudOutlineEnableForClients(int p1, int p2)
void ScrCmd_HudOutlineDisableForClients()
void ScrCmd_HudOutlineEnable(int p0, int p1)
void ScrCmd_HudOutlineDisable()
void ScrCmd_MotionBlurHQEnable()
void ScrCmd_MotionBlurHQDisable()
void ScrCmd_MakeCollideWithItemClip(int p0)
void GScr_SetCommonPlayerDataReservedInt(char* p0, int p1)
void GScr_GetCommonPlayerDataReservedInt(char* p0)
void GScr_GetRankedPlayerDataReservedInt(char* p0)
void GScr_SetRankedPlayerDataReservedInt(char* p0, int p1)
void GScr_GetCoopPlayerDataReservedInt(char* p0)
void GScr_SetCoopPlayerDataReservedInt(char* p0, int p1)
void GScr_PlayerChoke()
void PlayerCmd_pingPlayer()
void PlayerCmd_buttonPressedDEVONLY()
void PlayerCmd_SayAll()
void PlayerCmd_SayTeam()
void PlayerCmd_setSpawnWeapon(char* p0)
entity PlayerCmd_dropItem(char* p0)
entity PlayerCmd_DropScavengerBag(char* p0)
void PlayerCmd_finishPlayerDamage(int p2, Entity p0, Entity p1, int p3, char* p5, Entity p6, float* p6, Entity p7, float* p7, int p9, float p10)
void PlayerCmd_Suicide()
void PlayerCmd_CloseInGameMenu()
void iclientprintln(char* p0)
void iclientprintlnbold(char* p0)
void PlayerCmd_spawn(float* p0, float* p1)
void PlayerCmd_setEnterTime(int p0)
void PlayerCmd_ClonePlayer(int p0)
int PlayerCmd_IsTalking()
void PlayerCmd_AllowSpectateTeam(int p1)
string PlayerCmd_GetGuid()
void PlayerCmd_GetXuid()
void PlayerCmd_GetUcdIdLow()
void PlayerCmd_GetUcdIdHigh()
int PlayerCmd_GetClanIdHigh()
int PlayerCmd_GetClanIdLow()
int PlayerCmd_IsHost()
void PlayerCmd_GetSpectatingPlayer()
void PlayerCmd_PredictStreamPos(float* p0)
void nullsub_111()
void nullsub_112()
void PlayerCmd_SetRank(int p0, int p1)
void nullsub_113()
void nullsub_114()
void nullsub_115()
void PlayerCmd_SetCardDisplaySlot(int p1)
void PlayerCmd_KC_RegWeaponForFXRemoval(char* p0)
void PlayerCmd_LastStandRevive()
void PlayerCmd_SetSpectateDefaults(float* p0, float* p1)
float PlayerCmd_GetThirdPersonCrosshairOffset()
int PlayerCmd_IsSplitscreenPlayer()
int PlayerCmd_IsSplitscreenPlayerPrimary()
void PlayerCmd_RegisterParty(int p0)
array PlayerCmd_GetFireteamMembers()
void PlayerCmd_MarkForEyesOn(int p0)
void PlayerCmd_IsSighted()
array PlayerCmd_GetSightedPlayers()
array PlayerCmd_GetPlayersSightingMe()
void PlayerCmd_GetNearestNode()
void PlayerCmd_GetCustomizationBody()
void PlayerCmd_GetCustomizationHead()
void PlayerCmd_GetCustomizationViewmodel()
void PlayerCmd_LoadCustomizationPlayerView()
void PlayerCmd_HasLoadedCustomizationPlayerView()
void PlayerCmd_HasFemaleCustomizationModel()
void PlayerCmd_SetMLGCameraDefaults(int p0, float* p1, float* p2)
void PlayerCmd_IsMLGSpectator()
void PlayerCmd_SetMLGSpectator(int p0)
void PlayerCmd_GetMLGSpectatorTeam()
int PlayerCmd_GetJoinType()
void ScrCmd_GetOrigin()
void ScrCmd_UseBy()
void ScrCmd_PlaySoundAsMaster(char* p0)
void sub_8241C408(char* p0)
void ScrCmd_PlaySoundToTeam(char* p0)
void ScrCmd_PlaySoundToPlayer(char* p0)
void ScrCmd_PlaySoundOnMovingEnt(char* p0)
void ScrCmd_PlayLoopSound(char* p0)
float ScrCmd_GetNormalHealth()
void ScrCmd_SetNormalHealth(float p0)
void ScrCmd_SetOtherEnt(Entity p0)
void ScrCmd_SetEntityOwner(Entity p0)
void ScrCmd_Show()
void ScrCmd_Hide()
void ScrCmd_PlayerHide()
void ScrCmd_ShowToPlayer()
void ScrCmd_EnablePlayerUse()
void ScrCmd_DisablePlayerUse()
void ScrCmd_SetScriptMoverKillCam(char* p0)
void ScrCmd_MakeScrambler()
void ScrCmd_MakePortableRadar()
void ScrCmd_ClearScrambler()
void ScrCmd_ClearPortableRadar()
void GScr_SetMode()
conststring GScr_GetMode()
void GScr_SetTeamForTrigger()
void GScr_ClientClaimTrigger()
void GScr_ClientReleaseTrigger()
void GScr_ReleaseClaimedTrigger()
void GScr_IsUsingOnlineDataOffline()
int GScr_GetRestedTime()
void sub_8241E198()
void nullsub_149()
void GScr_IsOnLadder()
void GScr_StartRagdoll()
void GScr_GetCorpseAnim()
void GScr_SetCorpseFalling(int p0)
void GScr_GetCorpseEntity()
void ScrCmd_PlayerForceDeathAnim(char* p2, float* p4)
void GScr_StartAC130()
void GScr_StartAC130()
void GScr_ForceThirdPersonWhenFollowing()
void GScr_DisableForceThirdPersonWhenFollowing()
void ScrCmd_SetClientOwner()
void ScrCmd_PlayerSetGroundReferenceEnt(Entity p0, Entity p0)
void ScrCmd_PlayerCommandBot(Entity p0)
void Scr_MakeEntityNoMeleeTarget()
void GScr_EmissiveBlend(float p0, float p1)
void GScr_DisableMissileStick()
void GScr_EnableMissileStick()
void GScr_CanSpawnTestClient()
void GScr_SpawnTestClient()
void GScr_SetPlaneSplineId(int p1)
void GScr_LogMatchDataLife(int p0, int p2, int p3, float* p1, char* p4, char* p6, char* p5, char* p7, char* p9, char* p8, char* p10, char* p11)
void GScr_LogMatchDataDeath(int p0, int p1, Entity p2, Entity p2, int p3, char* p4, char* p5, int p6, int p7)
void ScrCmd_QueueDialogForPlayer(char* p0, float p2, Entity p3, Entity p4, int p4, Entity p5, float* p5)
void Scr_SetFXKillDefOnDelete()
float GScr_GetClanWarsBonusForCurrentPlaylist()
void GScr_AliensCheckIsItemPurchased(char* p0)
void GScr_AliensSetHasCraftedItem(char* p0)
void GScr_AliensCheckIsUpgradeEnabled(char* p0)
void GScr_AliensCheckIsRelicEnabled(char* p0)
conststring PlayerCmd_GetViewmodel()
int PlayerCmd_fragButtonPressed()
int PlayerCmd_secondaryOffhandButtonPressed()
int PlayerCmd_getCurrentWeaponClipAmmo()
void PlayerCmd_SetVelocity(float* p0)
float PlayerCmd_getViewHeight()
void j_Scr_ErrorInternal_8()
void PlayerCmd_getNormalizedMovement()
void PlayerCmd_getNormalizedCameraMovement()
void PlayerCmd_giveWeapon(char* p0, int p1, int p2, int p3, int p4)
void PlayerCmd_takeWeapon(char* p0)
int PlayerCmd_GetHybridScopeState(char* p0)
void PlayerCmd_SetHybridScopeState(char* p0, int p1)
void PlayerCmd_takeAllWeapons()
void PlayerCmd_getCurrentWeapon()
void PlayerCmd_getCurrentPrimaryWeapon()
void PlayerCmd_getCurrentOffhand()
void PlayerCmd_hasWeapon(char* p0)
void PlayerCmd_switchToWeapon()
void PlayerCmd_switchToWeaponImmediate()
void PlayerCmd_switchToOffhand(char* p0)
void PlayerCmd_setWeaponModelVariant(char* p0, int p1)
void PlayerCmd_giveStartAmmo(char* p0)
void PlayerCmd_giveMaxAmmo(char* p0)
float PlayerCmd_getFractionStartAmmo(char* p0)
float PlayerCmd_getFractionMaxAmmo(char* p0)
int PlayerCmd_isDualWielding()
int PlayerCmd_isReloading()
int PlayerCmd_isSwitchingWeapon()
int PlayerCmd_isOffhandWeaponReadyToThrow()
void PlayerCmd_setOrigin(float* p1, int p1)
vector PlayerCmd_GetVelocity()
void PlayerCmd_setAngles(float* p0)
vector PlayerCmd_getAngles()
int PlayerCmd_IsSprinting()
int PlayerCmd_IsLeaning()
int PlayerCmd_useButtonPressed()
int PlayerCmd_attackButtonPressed()
int PlayerCmd_adsButtonPressed()
int PlayerCmd_meleeButtonPressed()
int PlayerCmd_jumpButtonPressed()
float PlayerCmd_playerADS()
int PlayerCmd_isOnGround()
int PlayerCmd_isUsingTurret()
void PlayerCmd_SetViewmodel(char* p0)
void PlayerCmd_setOffhandPrimaryClass()
conststring PlayerCmd_getOffhandPrimaryClass()
void PlayerCmd_setOffhandSecondaryClass()
conststring PlayerCmd_getOffhandSecondaryClass()
void PlayerCmd_BeginLocationSelection(char* p0, int p1, float p2)
void PlayerCmd_EndLocationSelection()
void PlayerCmd_DisableWeapons()
void PlayerCmd_EnableWeapons()
void PlayerCmd_DisableOffhandWeapons()
void PlayerCmd_EnableOffhandWeapons()
void PlayerCmd_DisableWeaponSwitch()
void PlayerCmd_EnableWeaponSwitch()
void PlayerCmd_OpenPopupMenu(char* p0)
void PlayerCmd_OpenPopupMenuNoMouse(char* p0)
void PlayerCmd_ClosePopupMenu()
void PlayerCmd_OpenMenu(char* p0)
void PlayerCmd_CloseMenu(char* p0)
void PlayerCmd_FreezeControls(int p0, int p0)
void PlayerCmd_DisableUsability()
void PlayerCmd_EnableUsability()
void PlayerCmd_SetWhizbySpreads(float p0, float p1, float p2)
void PlayerCmd_SetWhizbyRadii(float p0, float p1, float p2)
void nullsub_116()
void nullsub_117()
void PlayerCmd_SetVolMod(float p2, char* p0, float p1)
void PlayerCmd_SetChannelVolume(float p2, char* p0, float p1)
void PlayerCmd_SetChannelVolumes(float p2, char* p1)
void PlayerCmd_DeactivateChannelVolumes(float p1)
void ScrCmd_PlayLocalSound(char* p0)
void ScrCmd_StopLocalSound(char* p0)
void PlayerCmd_SetWeaponAmmoClip(char* p0, int p1)
void PlayerCmd_SetWeaponAmmoStock(char* p0, int p1)
int PlayerCmd_GetWeaponAmmoClip(char* p0)
int PlayerCmd_GetWeaponAmmoStock(char* p0)
int PlayerCmd_AnyAmmoForWeaponModes(char* p0)
void PlayerCmd_SetClientOmnvar(char* p0, int p1, int p1, int p1, float p1, char* p1)
void PlayerCmd_SetClientDvar(char* p0, Entity p1, char* p1, char* p1)
void PlayerCmd_SetClientDvars(char* p0, char* p1)
void PlayerCmd_SetClientSpawnSightTraces()
float PlayerCmd_ClientSpawnSightTracePassed(int p0)
void PlayerCmd_AllowADS(int p0)
void PlayerCmd_AllowJump(int p0)
void PlayerCmd_AllowSprint(int p0)
void PlayerCmd_SetSpreadOverride(int p0)
void PlayerCmd_ResetSpreadOverride()
void PlayerCmd_SetAimSpreadMovementScale(float p0)
void PlayerCmd_SetActionSlot(int p0, char* p1, char* p2)
void PlayerCmd_SetViewKickScale(float p0)
float PlayerCmd_GetViewKickScale()
void PlayerCmd_GetWeaponsListAll()
void PlayerCmd_GetWeaponsListPrimaries()
void PlayerCmd_GetWeaponsListOffhands()
void PlayerCmd_GetWeaponsListItems()
void PlayerCmd_GetWeaponsListExclusives()
void PlayerCmd_GetWeaponsList()
void PlayerCmd_CanPlayerPlaceSentry(float p1, int p0)
void PlayerCmd_CanPlayerPlaceTank(float p5, float p4, float p3, float p2, float p1, float p0)
void Scr_VisionSetNakedForPlayer(float p1, char* p0)
void Scr_VisionSetStage(int p0, float p1)
void Scr_VisionSetNightForPlayer()
void Scr_VisionSetMissileCamForPlayer()
void Scr_VisionSetThermalForPlayer()
void Scr_VisionSetPainForPlayer()
void Scr_VisionSetPostApplyForPlayer()
void Scr_SetBlurForPlayer(float p0, float p1)
void Scr_GetPlayerWeaponModel()
void sub_823E0A70()
void GScr_notifyOnPlayerCommand(char* p0, char* p1)
void PlayerCmd_CanMantle()
void PlayerCmd_ForceMantle()
void PlayerCmd_CancelMantle()
void PlayerCmd_IsMantling()
void PlayerCmd_PlayFX(int p0, float* p1, float* p2, float* p3)
void PlayerCmd_PlayerRecoilScaleOn(int p0)
void PlayerCmd_PlayerRecoilScaleOff()
void PlayerCmd_WeaponLockStart(Entity p0, float* p0)
void PlayerCmd_WeaponLockFinalize(Entity p0, float* p0, float* p1, float* p1, int p2)
void PlayerCmd_WeaponLockFree()
void PlayerCmd_WeaponLockTargetTooClose(int p0)
void PlayerCmd_WeaponLockNoClearance(int p0)
void PlayerCmd_DisableWeaponPickup()
void PlayerCmd_EnableWeaponPickup()
void PlayerCmd_DisableAutoReload()
void PlayerCmd_EnableAutoReload()
void PlayerCmd_IsMeleeing()
void AI_GetEnemyInfo()
void PlayerCmd_BotSetFlag(char* p0, int p1)
void PlayerCmd_BotSetStance()
void PlayerCmd_BotLookAtPoint(Entity p0, float* p0, float p1, char* p2)
void PlayerCmd_BotSetScriptMove(float p0, float p1, Entity p2, float p2, Entity p3, int p3, Entity p4, int p4)
void PlayerCmd_BotSetScriptGoal(float* p0, float p1, char* p0, Entity p3, float p3, Entity p4, float p4)
void PlayerCmd_BotSetScriptGoalNode(char* p1, Entity p2, float p2, Entity p3, float p3)
void PlayerCmd_BotClearScriptGoal()
void PlayerCmd_BotSetScriptEnemy()
void PlayerCmd_BotClearScriptEnemy()
void PlayerCmd_BotSetPathingStyle(Entity p0, char* p0)
void PlayerCmd_BotSetAttacker()
void PlayerCmd_BotSetAwareness(float p0)
void PlayerCmd_BotPressButton(char* p0, float p1)
void PlayerCmd_BotClearButton(char* p0)
void PlayerCmd_BotThrowGrenade(float* p0, char* p1)
void PlayerCmd_BotHasScriptGoal()
void PlayerCmd_BotGetScriptGoal()
void PlayerCmd_BotGetScriptGoalNode()
float PlayerCmd_BotGetScriptGoalRadius()
float PlayerCmd_BotGetScriptGoalYaw()
string PlayerCmd_BotGetScriptGoalType()
void PlayerCmd_BotPursuingScriptGoal()
void PlayerCmd_BotGetWorldSize()
void PlayerCmd_BotGetWorldClosestEdge(Entity p0, float* p0)
void PlayerCmd_BotNodeAvailable()
entitynum PlayerCmd_BotFindNodeRandom()
void PlayerCmd_BotMemoryEvent(char* p0, Entity p1, char* p1, Entity p2, float* p2, Entity p3, float* p3, Entity p4)
void PlayerCmd_BotNodePick()
void PlayerCmd_BotNodePickMultiple(int p2)
void PlayerCmd_BotNodeScoreMultiple()
string PlayerCmd_BotGetPersonality()
void PlayerCmd_BotSetPersonality(char* p0)
void PlayerCmd_BotSetDifficulty(char* p0)
string PlayerCmd_BotGetDifficulty()
void PlayerCmd_BotSetDifficultySetting(char* p0, float p1)
float PlayerCmd_BotGetDifficultySetting(char* p0)
void PlayerCmd_BotPredictSeePoint(float* p0)
void PlayerCmd_BotCanSeeEntity()
array PlayerCmd_BotGetNodesOnPath()
float PlayerCmd_BotGetPathDist()
float PlayerCmd_BotGetFovDot()
void PlayerCmd_BotGetImperfectEnemyInfo(float* p1)
void PlayerCmd_BotIsRandomized()
void Scr_GetNodeNumber()
int Scr_NodeIsDisconnected()
void PlayerCmd_BotFirstAvailableGrenade(char* p0)
void PlayerCmd_BotPredictEnemyCampSpots(int p0)
void AgentCmd_SpawnAgent(float* p0, float* p1, char* p2, float p3, float p4, Entity p5)
void AgentCmd_FinishAgentDamage(int p2, Entity p0, Entity p1, int p3, char* p5, Entity p6, float* p6, Entity p7, float* p7, int p9, float p10)
void AgentCmd_SetAgentAttacker()
void AgentCmd_CloneAgent(int p0)
void AgentCmd_AgentCanSeeSentient()
void AnimStateCmd_SetAnimClass(char* p0)
void AnimStateCmd_EnableAnimState(int p0)
void AnimStateCmd_SetAnimState(Entity p1, int p1, float p2)
void AnimStateCmd_GetAnimEntry()
void AnimStateCmd_GetAnimEntryName()
void AnimStateCmd_GetAnimEntryAlias()
void AnimStateCmd_GetAnimEntryCount()
vector ScrAgentCmd_GetLookaheadDir()
void ScrAgentCmd_GetPathGoalPos()
void ScrAgentCmd_SetGoalPos(float* p0)
void ScrAgentCmd_GetGoalPos()
void ScrAgentCmd_SetGoalNode()
void ScrAgentCmd_SetGoalEntity()
void ScrAgentCmd_SetGoalRadius(float p0)
void ScrAgentCmd_SetWaypoint(Entity p0, float* p0)
void ScrAgentCmd_GetNegotiationStartNode()
void ScrAgentCmd_GetNegotiationEndNode()
void ScrAgentCmd_GetNegotiationNextNode()
void ScrAgentCmd_SetAnimScale(float p0, float p1)
void ScrAgentCmd_SetOrientMode(float* p1, float* p2)
void ScrAgentCmd_SetAnimMode()
void ScrAgentCmd_SetPhysicsMode()
void ScrAgentCmd_SetClipMode()
void ScrAgentCmd_BeginMelee()
void ScrAgentCmd_SetMaxTurnSpeed(float p0)
float ScrAgentCmd_GetMaxTurnSpeed()
void ScrAgentCmd_SetScripted(int p0)
void ScrAgentCmd_DoTrajectory(float* p0, float* p1, float p2)
void ScrAgentCmd_DoAnimLerp(float* p0, float* p1, float p2)
void ScrAgentCmd_DoAnimRelative(float* p1, float* p2)
void ScrAgentCmd_SetViewHeight(int p0)
void ScrAgentCmd_ClaimNode()
void ScrAgentCmd_RelinquishClaimedNode()
void ScrAgentCmd_UseModelCollisionBounds()
void ScrAgentCmd_SetWallRunCost(float p0)
void Scr_VisionSyncWithPlayer()
void PlayerCmd_SetNameplateMaterial(Entity p0, char* p0, Entity p1, char* p1)
void PlayerCmd_ShowHudSplash(char* p0, int p1, int p2)
void PlayerCmd_SetPerk(char* p0, int p1, int p2)
void PlayerCmd_HasPerk(char* p0, int p1)
void PlayerCmd_ClearPerks()
void PlayerCmd_UnsetPerk(char* p0, int p1)
void nullsub_118()
void nullsub_119()
int PlayerCmd_usingGamepad()
void sub_823DE558(char* p0)
void PlayerCmd_IsThrowingGrenade()
void ScriptEntCmd_MoveTo(float* p0)
void ScriptEntCmd_MoveX(float p0)
void ScriptEntCmd_MoveY()
void ScriptEntCmd_MoveZ()
void ScriptEntCmd_GravityMove(float* p0, float p1)
void ScriptEntCmd_MoveSlide(float* p0, float p1, float* p2)
void ScriptEntCmd_StopMoveSlide()
void ScriptEntCmd_RotateTo()
void ScriptEntCmd_RotateBy()
void ScriptEntCmd_RotatePitch(float p0)
void ScriptEntCmd_RotateYaw()
void ScriptEntCmd_RotateRoll()
void ScriptEntCmd_AddPitch(float p0)
void ScriptEntCmd_AddYaw()
void ScriptEntCmd_AddRoll()
void ScriptEntCmd_Vibrate(float* p0, float p1, float p2, float p3)
void ScriptEntCmd_RotateVelocity(float* p0)
void ScriptEntCmd_Solid()
void ScriptEntCmd_NotSolid()
void ScriptEntCmd_SetCanDamage(int p0)
void ScriptEntCmd_SetCanRadiusDamage(int p0)
void ScriptEntCmd_PhysicsLaunchClient(float* p0, float* p1)
void ScriptEntCmd_PhysicsLaunchServer(float* p0, float* p1, float p2, float p3, float p2)
void ScriptEntCmd_PhysicsLaunchServerItem(float* p0, float* p1)
void ScriptEntCmd_CloneBrushModelToScriptModel()
void ScriptEntCmd_ScriptModelPlayAnim()
void ScriptEntCmd_ScriptModelClearAnim()
void ScriptEntCmd_ScriptModelPlayAnimDeltaMotion(char* p0)
void ScriptEntCmd_PhysicsSetMaxLinVel(float p0)
void ScriptEntCmd_PhysicsSetMaxAngVel(float p0)
void ScriptEntCmd_PhysicsGetLinVel()
void ScriptEntCmd_PhysicsGetLinSpeed()
void ScriptEntCmd_PhysicsGetAngVel()
void ScriptEntCmd_PhysicsGetAngSpeed()
void VehCmd_Teleport(float* p0, float* p1)
void VehCmd_AttachPath()
void VehCmd_GetAttachPos()
void VehCmd_StartPath()
void VehCmd_SetSwitchNode()
void VehCmd_SetWaitSpeed(float p0)
void VehCmd_FinishDamage(Entity p0, Entity p1, int p2, int p3, char* p5, float* p6, float* p7, int p9, int p10)
void VehCmd_SetSpeed()
void VehCmd_SetSpeedImmediate()
void VehCmd_RotateYaw(float p0, float p1)
float VehCmd_GetSpeed()
vector VehCmd_GetVelocity()
vector VehCmd_GetBodyVelocity()
float VehCmd_GetSteering()
float VehCmd_GetThrottle()
void VehCmd_TurnEngineOff()
void VehCmd_TurnEngineOn()
float VehCmd_GetGoalSpeedMPH()
void VehCmd_SetAcceleration(float p0)
void VehCmd_SetDeceleration(float p0)
void VehCmd_ResumeSpeed(float p0)
void VehCmd_SetYawSpeed(float p0, float p1, float p2, float p3)
void VehCmd_SetYawSpeedByName(char* p0)
void VehCmd_SetMaxPitchRoll(float p0, float p1)
void VehCmd_SetAirResitance(float p0)
void VehCmd_SetTurningAbility(float p0)
void VehCmd_SetJitterParams(float* p0, float p1, float p2)
void VehCmd_SetHoverParams(float p0, float p1, float p2)
void VehCmd_JoltBody(float* p0, float p1, float p2, float p3)
void VehCmd_FreeVehicle()
string VehCmd_GetWheelSurface()
void VehCmd_GetVehicleOwner()
void VehCmd_SetDroneGoalPos(float* p1)
void VehCmd_SetVehicleLookatText()
void VehCmd_SetVehicleTeam()
void VehCmd_NearGoalNotifyDist(float p0)
void VehCmd_SetGoalPos(float* p0, int p1)
void VehCmd_SetGoalYaw(float p0)
void VehCmd_ClearGoalYaw()
void VehCmd_SetTargetYaw(float p0)
void VehCmd_ClearTargetYaw()
void VehCmd_HeliSetGoal(float* p0, Entity p1, float p1, Entity p2, float p2, Entity p3, float p3, Entity p4, int p4, Entity p5, float p6, Entity p7, float p7, int p8, int p9, int p10, int p11, int p12)
void VehCmd_SetTurretTargetVec(float* p0)
void VehCmd_SetTurretTargetEnt(float* p1)
void VehCmd_ClearTurretTargetEnt()
void VehCmd_CanTurretTargetPoint(float* p0, int p1)
void VehCmd_SetLookAtEnt()
void VehCmd_ClearLookAtEnt()
void VehCmd_SetWeapon(char* p0)
void VehCmd_FireWeapon(Entity p3, float p3, Entity p0, Entity p1, Entity p2, float* p2)
void VehCmd_VehicleTurretControlOn()
void VehCmd_VehicleTurretControlOff()
int VehCmd_IsTurretReady()
void VehCmd_VehicleDriveTo(float* p0, float p1)
void VehCmd_DoSpawn()
void VehCmd_IsPhysVeh()
void VehPhysCmd_Crash(int p0)
void VehPhysCmd_Launch(float* p0, float* p2, float p1)
void VehPhysCmd_DisableCrashing()
void VehPhysCmd_EnableCrashing()
void VehPhysCmd_SetSpeed(float p0)
void VehPhysCmd_SetConveyorBelt(float p1, float p0)
void VehCmd_FreeVehicle()
void CMD_Heli_SetDamageStage(int p0)
void HECmd_SetText(char* p0)
void nullsub_148()
void HECmd_SetMaterial(char* p0, int p1, int p2)
void HECmd_SetTargetEnt()
void HECmd_ClearTargetEnt()
void HECmd_SetTimer(float p0)
void HECmd_TimerUp()
void HECmd_SetTimerStatic()
void HECmd_SetTenthsTimer()
void HECmd_SetTenthsTimerUp(float p0)
void HECmd_SetTenthsTimerStatic(float p0)
void HECmd_SetClock(float p0, float p1, char* p2, int p3, int p4)
void HECmd_SetClockUp()
void HECmd_SetValue(float p0)
void HECmd_SetWaypoint(int p0, int p2, int p1, int p3)
void HECmd_SetWaypointEdgeStyle_RotatingIcon()
void HECmd_SetWaypointEdgeStyle_SecondArrow()
void HECmd_SetWaypointIconOffscreenOnly()
void HECmd_FadeOverTime(float p0)
void HECmd_ScaleOverTime(float p0, int p1, int p2)
void HECmd_MoveOverTime(float p0)
void HECmd_Reset()
void HECmd_Destroy()
void HECmd_SetPulseFX(int p0, int p1, int p2)
void HECmd_SetPlayerNameString()
void HECmd_ChangeFontScaleOverTime(float p0)
void HECmd_LinkWaypointToTargetWithOffset(float* p1)
void everyVisitCallback()
void SentientCmd_GetEnemySqDist()
void SentientCmd_GetClosestEnemySqDist(float* p0, float p1)
void SentientCmd_SetThreatBiasGroup()
string SentientCmd_GetThreatBiasGroup()
void SentientCmd_MakeEntitySentient(int p1)
void SentientCmd_FreeEntitySentient()
void SentientCmd_LastKnownTime()
void SentientCmd_LastKnownPos()
void SentientCmd_SetIgnoreFoliageSightingMe(int p0)
void nullsub_120()
void nullsub_121()
void Scr_Print()
void Scr_PrintLn()
void nullsub_122()
void nullsub_123()
void nullsub_124()
void nullsub_125()
void nullsub_126()
void nullsub_127()
void nullsub_128()
void GScr_PrecacheTurret(char* p0)
array Scr_GetWeaponArray()
void GScr_SpawnTurret(float* p1, char* p2, int p3)
void GScr_CanSpawnTurret()
void assertexCmd(int p0)
void sub_82405EA8(int p0)
void Scr_SetPathnodeField()
int GScr_IsDefined(Entity p0)
int GScr_IsValidMissile(Entity p0)
int GScr_IsString(Entity p0)
int GScr_IsSentient(Entity p0)
int GScr_GetIndexForLuiNCString(char* p0)
void GScr_SetOmnvar(char* p0, int p1, int p1, int p1, float p1, char* p1)
void GScr_GetOmnvar(char* p0)
void GScr_SetDvar(char* p0, Entity p1, char* p1, char* p1)
void GScr_SetDynamicDvar(char* p0, Entity p1, char* p1, char* p1)
void GScr_SetDvarIfUninitialized(char* p0, char* p1)
void sub_82406640(char* p0, Entity p1, char* p1, char* p1)
void sub_824067D8(char* p0, char* p1)
string GScr_GetDvar(char* p1, char* p0)
int GScr_GetDvarInt(char* p1, char* p0)
float GScr_GetDvarFloat(char* p1, char* p0)
void GScr_GetDvarVector(char* p1, char* p0)
void GScr_GetTime()
void Scr_GetEntByNum(int p0)
string Scr_GetWeaponModel(char* p0, int p1)
void Scr_GetWeaponDisplayName(char* p0)
string Scr_GetWeaponBaseName(char* p0)
array Scr_GetWeaponAttachments(char* p0)
array Scr_GetWeaponAttachmentDisplayNames(char* p0)
void Scr_GetWeaponCamoName(char* p0)
void Scr_GetWeaponReticleName(char* p0)
array Scr_GetWeaponHideTags(char* p0)
float GScr_GetAnimLength()
void GScr_AnimHasNotetrack()
void GScr_GetNotetrackTimes()
void GScr_Spawn(float* p1, int p2, int p3)
void GScr_Spawn(float* p1, int p2, int p3)
void j_Scr_ErrorInternal_9()
void Scr_BulletTrace(float* p0, float* p1, int p2, Entity p3, int p4, int p5, int p6, int p7, int p8)
void Scr_BulletTracePassed(float* p2047, float* p1, int p2, Entity p3)
void Scr_SightTracePassed(float* p2047, float* p1, int p2, Entity p3, Entity p4)
void Scr_PhysicsTrace(float* p0, float* p1)
void Scr_PlayerPhysicsTrace(float* p0, float* p1)
void Scr_GetGroundPosition(float* p0, float p1, float p2, float p3)
void GScr_GetMoveDelta(float p2, float p1)
void GScr_GetAngleDelta(float p2, float p1)
void GScr_GetAngleDelta3D(float p2, float p1)
void GScr_GetNorthYaw()
void GScr_SetNorthYaw(float p0)
void ScrCmd_SetSlowMotion(float p1000, float p1, float p2)
int Scr_RandomInt(int p0)
float Scr_RandomFloat(float p0)
int Scr_RandomIntRange(int p0, int p1)
float Scr_RandomFloatRange(float p0, float p1)
float GScr_sin(float p0)
float GScr_cos(float p0)
float GScr_tan(float p0)
float GScr_asin(float p0)
float GScr_acos(float p0)
float GScr_atan(float p0)
int GScr_CastInt(Entity p0, int p0, float p0, char* p0)
float GScr_CastFloat(Entity p0, int p0, float p0, char* p0)
float GScr_abs(float p0)
float GScr_min(float p1, float p0)
float GScr_max(float p1, float p0)
float GScr_floor(float p0)
float GScr_ceil(float p0)
float GScr_exp(float p0)
float GScr_log(float p0)
float GScr_sqrt(float p0)
float GScr_squared(float p0)
float GScr_clamp(float p2, float p1, float p0)
float GScr_pow(float p1, float p0)
float GScr_AngleClamp360(float p0)
float GScr_AngleClamp180(float p0)
void GScr_VectorFromLineToPoint(float* p0, float* p1, float* p2)
void GScr_PointOnSegmentNearestToPoint(float* p0, float* p1, float* p2)
void GScr_IsPointInVolume(float* p0)
void Scr_Distance(float* p0, float* p1)
void Scr_Distance2D(float* p0, float* p1)
void Scr_Distance2DSquared(float* p0, float* p1)
void Scr_DistanceSquared(float* p0, float* p1)
void Scr_Length(float* p0)
void Scr_Length2D(float* p0)
void Scr_LengthSquared(float* p0)
void Scr_Length2DSquared(float* p0)
void Scr_Closer(float* p0, float* p1, float* p2)
void Scr_VectorDot(float* p0, float* p1)
void Scr_VectorCross(float* p0, float* p1)
void Scr_VectorNormalize(float* p0)
void Scr_VectorToAngles(float* p0)
void Scr_VectorToYaw(float* p0)
void Scr_VectorLerp(float* p0, float* p1, float p2)
void Scr_AxisToAngles(float* p0, float* p1, float* p2)
void Scr_AnglesToAxis(float* p0)
void Scr_AnglesToUp(float* p0)
void Scr_AnglesToRight(float* p0)
void Scr_AnglesToForward(float* p0)
void Scr_AnglesDelta(float* p0, float* p1)
void Scr_CombineAngles(float* p0, float* p1)
void Scr_TransformMove(float* p0, float* p1, float* p2, float* p3, float* p4, float* p5)
void Scr_RotateVector(float* p0, float* p1)
void Scr_RotatePointAroundVector(float* p0, float* p1, float p2)
void Scr_InvertAngles(float* p0)
void Scr_RotateVectorInverted(float* p0, float* p1)
void Scr_CalculateStartOrientation(float* p0, float* p1, float* p2, float* p3)
void Scr_IsSubStr(char* p1, char* p0)
void Scr_IsEndStr(char* p0, char* p1)
void Scr_GetSubStr(char* p0, int p1, int p2)
void Scr_ToLower()
array Scr_StrTok()
int Scr_StrICmp()
void sub_82416598(int p3, float p2, float p1, char* p0)
void Scr_AmbientStop(char* p1, float p0)
void Scr_PrecacheModel(char* p0)
void Scr_PrecacheShellShock(char* p0)
void Scr_PrecacheItem(char* p0)
void Scr_PrecacheMaterial(char* p0)
void Scr_PrecacheString(const char* p0)
void GScr_PrecacheMenu(char* p0)
void Scr_PrecacheRumble(char* p0)
void GScr_PrecacheLocationSelector(char* p0)
void Scr_PrecacheLeaderboards(char* p0)
void GScr_PrecacheHeadIcon(char* p0)
int Scr_LoadFX(char* p0)
void Scr_PlayFX(int p0, float* p1, float* p2, float* p3)
void Scr_PlayFXOnTag(int p0, char* p2)
void Scr_StopFXOnTag(int p0, char* p2)
void Scr_KillFXOnTag(int p0, char* p2)
void Scr_PlayLoopedFX(int p0, float* p5, float* p4, float p3, float* p2, float p1)
void Scr_SpawnFX(int p0, float* p3, float* p2, float* p1)
void Scr_SpawnFXForClient(int p0, float* p4, float* p3, float* p1)
void Scr_TriggerFX(float p1)
void Scr_PlayFXOnTagForClients(int p0, char* p2, Entity p3)
void Scr_PhysicsExplosionSphere(float* p0, float p1, float p2, float p3)
void Scr_PhysicsExplosionCylinder(float* p0, float p1, float p2, float p3)
void Scr_PhysicsRadiusJolt(float* p0, float p1, float p2, float* p3)
void Scr_PhysicsRadiusJitter(float* p0, float p1, float p2, float p3, float p4)
void Scr_SetExponentialFog()
void Scr_ClearFog(float p0)
void GScr_IsExplosiveDamageMOD()
void GScr_RadiusDamage()
void GScr_SetPlayerIgnoreRadiusDamage(int p0)
void GScr_GlassRadiusDamage(float* p0, float p1, float p2, float p3)
void GScr_Earthquake(float p0, float p1, float* p2, float p3)
int GScr_GetNumParts(char* p0)
conststring GScr_GetPartName(char* p0, int p1)
float GScr_WeaponFireTime(char* p0)
int GScr_WeaponClipSize(char* p0)
int GScr_WeaponIsAuto(char* p0)
int GScr_WeaponIsSemiAuto(char* p0)
int GScr_WeaponIsBoltAction(char* p0)
int GScr_WeaponInheritsPerks(char* p0)
int GScr_WeaponBurstCount(char* p0)
string GScr_WeaponType(char* p0)
string GScr_WeaponClass(char* p0)
string GScr_WeaponInventoryType(char* p0)
int GScr_WeaponStartAmmo(char* p0)
int GScr_WeaponMaxAmmo(char* p0)
void GScr_WeaponAltWeaponName(char* p0)
void GScr_IsWeaponClipOnly(char* p0)
void GScr_IsWeaponDetonationTimed(char* p0)
int GScr_WeaponHasThermalScope(char* p0)
entitynum VehPathCmd_GetNode(char* p1)
array VehPathCmd_GetNodeArray(char* p1)
array VehPathCmd_GetAllNodes()
int VehicleScript_GetActiveCount()
void VehicleScript_Precache(char* p0)
void VehicleScript_Spawn(char* p0, float* p3, float* p4)
array VehicleScript_GetArray()
array VehicleScript_GetSpawnerArray()
void Scr_PlayRumbleOnPosition()
void Scr_PlayRumbleLoopOnPosition()
void Scr_StopAllRumbles()
void ScrCmd_SoundExists(char* p0)
void nullsub_129()
void nullsub_130()
void nullsub_131()
void nullsub_132()
void nullsub_133()
void nullsub_134()
void GScr_SetMiniMap(char* p0, float p1, float p2, float p3, float p4)
void GScr_SetThermalBodyMaterial(char* p0)
void j_Scr_ErrorInternal_10()
void GScr_GetArrayKeys(Object p0)
void GScr_GetFirstArrayKey(Object p0)
void GScr_GetNextArrayKey(Object p0)
void GScr_SortByDistance(Object p0, float* p1)
string Scr_TableLookup(char* p0, int p1, char* p2, int p3)
string Scr_TableLookupIStringByRow(char* p0, int p1, int p2)
void Scr_TableLookupIString(char* p0, int p1, char* p2, int p3)
string sub_8240EB88(char* p0, int p1, int p2)
int Scr_TableLookupRowNum(char* p0, int p1, char* p2)
void Scr_TableExists(char* p0)
int Scr_LookupSoundLength(char* p0)
void GScr_GetMissileOwner()
void Scr_MagicBullet(char* p0, float* p1, float* p2)
conststring Scr_GetWeaponFlashTagname(char* p0)
void GScr_AveragePoint()
void GScr_AverageNormal()
int GScr_GetGlass()
array GScr_GetGlassArray()
void GScr_GetGlassOrigin(int p0)
void GScr_IsGlassDestroyed(int p0)
void GScr_DestroyGlass(int p0, float* p1)
void GScr_DeleteGlass(int p0)
int GScr_IsHairRunning()
string GScr_GetEntChannelName(int p0)
void Scr_BadPlace_Delete(char* p0)
void Scr_BadPlace_Cylinder(char* p0, float p1, float* p2, float p3, float p4)
void Scr_BadPlace_Arc(char* p0, float p1, float* p2, float p3, float p4, float* p5, float p6, float p7)
void Scr_BadPlace_Brush(char* p0, float p1)
void Scr_BadPlace_Global(char* p0, float p1)
void nullsub_135()
void Scr_GetClosestNodeInSight(float* p0)
array Scr_GetLinkedNodes()
void Scr_ActivateClientExploder(int p0, Entity p1, Entity p1, Object p1, Entity p1, Object p1, Entity p2, float p2)
void Scr_TrajectoryCalculateInitialVelocity(float* p0, float* p1, float* p2, float p3)
void Scr_TrajectoryCalculateMinimumVelocity(float* p0, float* p1, float p2)
float Scr_TrajectoryCalculateExitAngle(float p0, float p1, float p2, float p3)
void Scr_TrajectoryEstimateDesiredInAirTime(float* p0, float* p1, float p2, float p3)
float Scr_TrajectoryComputeDeltaHeightAtTime(float p0, float p1, float p2)
void Scr_TrajectoryCanAttemptAccurateJump(float* p0, float* p1, float* p2, float* p3, float p4, float p5)
int GScr_IsArray(Entity p0)
void nullsub_136()
void nullsub_137()
void nullsub_138()
void nullsub_139()
void GScr_GetEnemySquadData()
int GScr_GetEnemySquadDogType()
int GScr_GetSquadAssaultELO()
void GScr_GetScriptableArray(char* p0, char* p1)
void GScr_DisconnectNodePair(int p2)
void GScr_ConnectNodePair(int p2)
int GScr_GetCSplineCount()
int GScr_GetCSplinePointCount()
float GScr_GetCSplineLength()
int GScr_GetCSplinePointId()
string GScr_GetCSplinePointLabel()
float GScr_GetCSplinePointTension()
void GScr_GetCSplinePointPosition()
void GScr_GetCSplinePointCorridorDims()
void GScr_GetCSplinePointTangent()
float GScr_GetCSplinePointDistToNextPoint()
void GScr_CalcCSplinePosition()
void GScr_CalcCSplineTangent()
void GScr_CalcCSplineCorridor()
void GScr_SetNoJIPScore(int p0)
void GScr_SetNoJIPTime(int p0)
void nullsub_140()
void nullsub_141()
void nullsub_142()
void nullsub_143()
void nullsub_144()
void nullsub_145()
void nullsub_146()
void nullsub_147()
void GScr_LoadLuiFile(char* p0)
int GScr_GetSquadAssaultSquadIndex(int p0)
void sub_82412030()
void Scr_Objective_Add(int p0, float* p2)
void Scr_Objective_Delete(int p0)
void Scr_Objective_State(int p0)
void Scr_Objective_Icon(int p0)
void Scr_Objective_Position(int p0, float* p1)
void Scr_Objective_Current(int p0)
void Scr_Objective_OnEntity(int p0)
void Scr_Objective_OnEntityWithRotation(int p0)
void GScr_Objective_Team(int p0)
void GScr_Objective_Player(int p0, int p1)
void GScr_Objective_PlayerTeam(int p0, int p1)
void GScr_Objective_PlayerEnemyTeam(int p0, int p1)
void GScr_Objective_PlayerMask_HideFromAll(int p0)
void GScr_Objective_PlayerMask_HideFrom(int p0, int p1)
void GScr_Objective_PlayerMask_ShowToAll(int p0)
void GScr_Objective_PlayerMask_ShowTo(int p0, int p1)
void SentientCmd_CreateThreatBiasGroup()
void SentientCmd_ThreatBiasGroupExists()
int SentientCmd_GetThreatBias()
void SentientCmd_SetThreatBias(int p2)
void SentientCmd_SetThreatBiasAgainstAll(int p1)
void SentientCmd_SetIgnoreMeGroup()
int SentientCmd_IsEnemyTeam()
void iprintln(char* p0)
void iprintlnbold(char* p0)
void nullsub_150()
entitynum Scr_GetEnt(char* p1)
void Scr_GetEntArray(char* p1)
void Scr_GetSpawnArray()
void GScr_GetStartOrigin(float* p0, float* p1)
void GScr_GetStartAngles(float* p0, float* p1)
void GScr_SpawnPlane(float* p2, Entity p3, char* p3, Entity p4, char* p4, int p5)
void Scr_AddStruct()
void GScr_SpawnHelicopter(float* p1, float* p2, char* p3, char* p4)
int GScr_IsAlive(Entity p0)
int GScr_IsSpawner(Entity p0)
int Scr_MissileCreateAttractorEnt(float p1, float p2)
int Scr_MissileCreateAttractorOrigin(float* p0, float p1, float p2)
int Scr_MissileCreateRepulsorEnt(float p1, float p2)
int Scr_MissileCreateRepulsorOrigin(float* p0, float p1, float p2)
void Scr_MissileDeleteAttractor(int p0)
void ScrCmd_PlaySoundAtPos(float* p0, char* p1)
void ScrCmd_PrecacheSound(char* p0)
void GScr_NewHudElem()
void GScr_NewClientHudElem()
void GScr_NewTeamHudElem()
void Scr_ResetTimeout()
int GScr_IsPlayer(Entity p0)
int GScr_IsPlayerNumber(int p0)
int GScr_IsAI(Entity p0)
void Scr_SetSunLight(float p2, float p1, float p0)
void Scr_ResetSunLight()
void GScr_SetWinningTeam()
void GScr_Announcement(char* p0)
void GScr_ClientAnnouncement(char* p1)
int GScr_GetTeamScore()
void GScr_SetTeamScore(int p1)
void GScr_SetClientNameMode()
void GScr_UpdateClientNames()
int GScr_GetTeamPlayersAlive()
void nullsub_151()
void GScr_PlayCinematicForAll(char* p0)
void GScr_PreloadCinematicForAll(char* p0)
void GScr_StopCinematicForAll()
void GScr_WorldEntNumber()
void GScr_Obituary(char* p2, Entity p1)
void GScr_positionWouldTelefrag(float* p0)
void GScr_CanSpawn(float* p0)
void GScr_CapsuleTracePassed(float* p0, float p1, float p2, Entity p3, int p4, int p5)
void GScr_getStartTime()
void GScr_PrecacheStatusIcon(char* p0)
void GScr_PrecacheMiniMapIcon(char* p0)
void GScr_PrecacheMpAnim(char* p0)
void GScr_MapRestart(int p0)
void GScr_ExitLevel(int p0)
void GScr_AddTestClient(int p0, int p0, int p1, int p2, int p0, int p1, int p2)
void GScr_AddAgent()
void nullsub_152()
void GScr_AllClientsPrint(char* p0)
void GScr_ClientPrint(char* p1)
int GScr_MapExists()
int GScr_IsValidGameType(char* p0)
void nullsub_153()
void GScr_SetPlayerTeamRank(int p1, int p2, int p2)
void nullsub_154()
void GScr_SetTeamRadar(int p1)
int GScr_GetTeamRadar()
void GScr_SetTeamRadarStrength(int p1)
int GScr_GetTeamRadarStrength()
void GScr_GetUAVStrengthMin()
void GScr_GetUAVStrengthMax()
void sub_8241FB58()
void GScr_GetUAVStrengthLevelShowEnemyFastSweep()
void sub_8241FB68()
void GScr_BlockTeamRadar()
void GScr_UnblockTeamRadar()
int GScr_IsTeamRadarBlocked()
int sub_8241E140()
void GScr_SetMatchData()
void GScr_GetMatchData()
void GScr_SendMatchData()
void GScr_ClearMatchData()
void GScr_SetMatchDataDef(char* p0)
void GScr_SetMatchClientIP(int p1)
void GScr_SetMatchDataID()
void GScr_SetClientMatchData()
void GScr_GetClientMatchData()
void GScr_SetClientMatchDataDef(char* p0)
void GScr_SendClientMatchData()
void GScr_GetBuildVersion()
int GScr_GetBuildNumber()
int GScr_GetSystemTime()
void GScr_GetMatchRulesData()
void GScr_IsUsingMatchRulesData()
void GScr_KickPlayer(char* p1, int p0)
int sub_8241E0B0()
void GScr_SetMapCenter(float* p0)
void GScr_SetGameEndTime(int p0)
void Scr_VisionSetNaked(float p1, char* p0)
void Scr_VisionSetNight(float p1, char* p0)
void Scr_VisionSetMissilecam(float p1, char* p0)
void Scr_VisionSetThermal(float p1, char* p0)
void Scr_VisionSetPain(float p1, char* p0)
void Scr_VisionSetPostApply(float p1, char* p0)
void sub_8241FD20()
void GScr_SetAC130Ambience(float p1, char* p0)
string GScr_GetMapCustomField(char* p0)
void GScr_SpawnSightTrace(float* p1, float* p2)
void GScr_IncrementCounter(char* p0, int p1)
string GScr_GetCounterTotal(char* p0)
void GScr_SetTeamMode()
entitynum Scr_GetNode(char* p1)
array Scr_GetNodeArray(char* p1)
array Scr_GetAllNodes()
void Scr_GetNodesInRadius(float* p0, float p1, float p2, float p3, char* p4)
void Scr_GetNodesInRadiusSorted()
void Scr_GetZoneCount()
void Scr_GetZoneNearest(float* p0)
int Scr_GetNodeZone()
void Scr_GetZoneNodes(int p0, int p1)
void Scr_GetZoneNodesByDist(int p0, float p1, int p2)
entitynum Scr_GetZoneNodeForIndex(int p0)
void Scr_GetZonePath(int p0, int p1)
void Scr_GetZoneOrigin(int p0)
void Scr_FindEntrances(float* p0)
int Scr_NodeExposedToSky()
void Scr_GetNodesInTrigger()
void Scr_NodesVisible(int p2)
void Scr_GetNodesOnPath(float* p0, float* p1)
int Scr_IsBot(Entity p0)
void Scr_BotGetClosestNavigablePoint(float* p0, float p1, Entity p2)
int Scr_BotMemoryFlags(char* p0)
void Scr_BotFlagMemoryEvents(int p0, int p1, int p2, float* p3, float p4, char* p5, int p6, Entity p7)
void Scr_BotGetMemoryEvents(int p0, int p1, int p2, char* p3, int p4, Entity p5)
int Scr_BotAutoConnectEnabled()
void Scr_BotZoneGetCount(int p0, char* p2)
void Scr_BotZoneGetIndoorPercent(int p0)
void Scr_BotZoneSetTeam(int p0)
void Scr_BotZoneNearestCount(int p0, int p2, char* p3, char* p3, int p3)
void nullsub_155()
void Scr_BotSentientSwap()
void Scr_BotGetTeamLimit(int p0)
void Scr_BotGetTeamDifficulty(int p0)
int Scr_GetWeaponExplosionRadius(char* p0)
void Scr_GetPredictedEntityPosition(float p1)
void Scr_GetPathDist(float* p0, float* p1, float p2)
void nullsub_156()
void Scr_MarkDangerousNodes(float* p0, float p1, int p2)
void Scr_MarkDangerousNodesInTrigger(int p1)
int Scr_IsAgent(Entity p0)
int Scr_GetMaxAgents()
void Scr_SetLevelDopplerPreset(char* p0)
void ScrCmd_QueueDialog(char* p0, char* p1, float p3, Entity p4, Entity p5, Entity p6, Entity p7, float* p7)
void ScrCmd_TriggerPortableRadarPing(float* p0)
void ScrCmd_IsDedicatedServer()
int ScrCmd_GetPlaylistVersion()
int ScrCmd_GetPlaylistID()
void ScrCmd_GetActiveClientCount()
void Scr_IsSquadsMode()
void GScr_AddBot(int p3, int p2, int p1, char* p0)
int Scr_GetSquadAssaultEnemyPrestige()